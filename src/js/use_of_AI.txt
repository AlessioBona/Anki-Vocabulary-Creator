I want to use OpenAI Text Models to do some opearations. I'll start describing the first one, so that we can start implement them.

On the cells for "Sentence_01_zh" and "Sentence_02_zh" add a button to regenerate the sentence block.
"Sentence_01_zh" and "Sentence_02_zh" are sentences in Mandarin Chinese, using a language level HSK3-HSK4, written with simplified characters, that use the corresponding word or expression in the column "word". When the "regenerate" on "Sentence_01_zh" button is clicked, the app should make three API calls to the LLM, to get a new example sentence using that word or expression and substitute the old one, then send a second API call to get the transliteration in pinyin of the new sentence, to be put in Sentence_01_py in the same row, and then another API call to get the translation to English to be put in Sentence_01_en in the same row.
Same thing for Sentence_02_zh and the two corresponding cells.

On the cell "word" instead add a "regenerate" button to regenerate the "pronunciation" and "translation" cell, that are the transliteration in pinyin and the translation to English of the chinese word in the "word" cell.

On the bottom, after "filter rows" I want a "create sentences" button that triggers a function, that do this:
for every row showed at the moment, and only for those rows, trigger the "regenerate word" function, and then the "regenerate sentence" functions for sentence 01 and sentence 02, to populate the row.
Pay attention to the order of the API calls and to wait for the previous call to be done before you trigger the next.

"Generate Audio Files" Feature
I  want to add a feature to generate audio files for Chinese sentences in your vocabulary app. 
Requirements:

UI Addition
Add a "Generate Audio Files" button next to the existing "Create Sentences" button
Functionality
Process Only Visible Rows: Only generate audio for rows currently displayed (not filtered out)

For Each Visible Row:

Process Sentence_01_zh first, then Sentence_02_zh
Use TTS API in apiHandler.js to convert Chinese text to speech
Use settings from new UI inputs (model, voice, instructions)
File Handling:

Generate filename based on English word translation + 5 random numbers for uniqueness
Save TTS response as MP3 file
Update Audio_Sentence_01 and Audio_Sentence_02 cells with format [sound:filename.mp3] (Anki format)
Batch Download:

After processing all rows, create a ZIP file with all generated MP3s
Trigger download of this ZIP file
Technical Requirements
Add form fields to index.html for TTS settings (model, voice, instructions)
Use the TTS functionality in apiHandler.js
Handle file creation and ZIP packaging in the browser
Process rows sequentially to avoid overwhelming the API
This feature would allow users to generate audio pronunciations of their vocabulary sentences and download them in a format ready for import into Anki flashcards.